{
  "test_queries": {
    "basic_filtering": {
      "description": "Find all electronics sales in California",
      "query": {
        "filter": [
          {
            "field": "product.category",
            "operator": "equals",
            "value": "Electronics"
          },
          {
            "field": "customer.state",
            "operator": "equals",
            "value": "CA"
          }
        ],
        "fields": [
          "sale.id",
          "sale.amount",
          "product.name",
          "customer.name",
          "sale.date"
        ],
        "limit": 10
      },
      "expected_result_count": 25,
      "expected_fields": ["sale.id", "sale.amount", "product.name", "customer.name", "sale.date"]
    },
    
    "aggregation_revenue_by_category": {
      "description": "Calculate total revenue by product category for 2023",
      "query": {
        "filter": [
          {
            "field": "sale.date",
            "operator": "greater_than_or_equal",
            "value": "2023-01-01"
          }
        ],
        "fields": [
          "product.category"
        ],
        "aggregates": [
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "total_revenue"
          },
          {
            "field": "sale.id",
            "function": "count",
            "alias": "total_sales"
          }
        ]
      },
      "expected_aggregates": ["total_revenue", "total_sales"],
      "expected_categories": ["Electronics", "Clothing", "Home & Garden", "Books"]
    },
    
    "customer_segmentation": {
      "description": "Analyze customer spending by loyalty tier",
      "query": {
        "filter": [
          {
            "field": "sale.status",
            "operator": "equals",
            "value": "completed"
          }
        ],
        "fields": [
          "customer.loyalty_tier",
          "customer.age"
        ],
        "aggregates": [
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "total_spent"
          },
          {
            "field": "sale.amount",
            "function": "avg",
            "alias": "average_order_value"
          },
          {
            "field": "customer.id",
            "function": "count",
            "alias": "unique_customers"
          }
        ]
      },
      "expected_loyalty_tiers": ["Bronze", "Silver", "Gold", "Platinum"]
    },
    
    "time_series_analysis": {
      "description": "Monthly sales trend for electronics",
      "query": {
        "filter": [
          {
            "field": "product.category",
            "operator": "equals",
            "value": "Electronics"
          },
          {
            "field": "sale.date",
            "operator": "between",
            "value": ["2023-01-01", "2023-12-31"]
          }
        ],
        "fields": [
          "date.month",
          "date.year"
        ],
        "aggregates": [
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "monthly_revenue"
          },
          {
            "field": "sale.id",
            "function": "count",
            "alias": "monthly_orders"
          }
        ]
      },
      "expected_months": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    },
    
    "high_value_customers": {
      "description": "Find customers with orders over $500",
      "query": {
        "filter": [
          {
            "field": "sale.amount",
            "operator": "greater_than",
            "value": 500
          },
          {
            "field": "sale.status",
            "operator": "equals",
            "value": "completed"
          }
        ],
        "fields": [
          "customer.id",
          "customer.name",
          "customer.email",
          "customer.loyalty_tier",
          "product.category",
          "sale.amount",
          "sale.date"
        ],
        "limit": 50
      },
      "expected_min_amount": 500
    },
    
    "regional_performance": {
      "description": "Compare sales performance across states",
      "query": {
        "filter": [
          {
            "field": "sale.date",
            "operator": "greater_than_or_equal",
            "value": "2023-01-01"
          }
        ],
        "fields": [
          "customer.state",
          "customer.country"
        ],
        "aggregates": [
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "state_revenue"
          },
          {
            "field": "sale.id",
            "function": "count",
            "alias": "state_orders"
          },
          {
            "field": "customer.id",
            "function": "count",
            "alias": "unique_customers"
          }
        ]
      },
      "expected_states": ["CA", "TX", "NY", "FL", "WA"]
    },
    
    "product_performance": {
      "description": "Analyze product performance by brand",
      "query": {
        "filter": [
          {
            "field": "product.rating",
            "operator": "greater_than",
            "value": 4.0
          },
          {
            "field": "sale.date",
            "operator": "greater_than_or_equal",
            "value": "2023-06-01"
          }
        ],
        "fields": [
          "product.brand",
          "product.category"
        ],
        "aggregates": [
          {
            "field": "sale.quantity",
            "function": "sum",
            "alias": "units_sold"
          },
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "revenue"
          },
          {
            "field": "product.rating",
            "function": "avg",
            "alias": "average_rating"
          }
        ]
      },
      "expected_min_rating": 4.0
    },
    
    "payment_method_analysis": {
      "description": "Analyze payment method preferences",
      "query": {
        "filter": [
          {
            "field": "sale.status",
            "operator": "equals",
            "value": "completed"
          }
        ],
        "fields": [
          "sale.payment_method"
        ],
        "aggregates": [
          {
            "field": "sale.id",
            "function": "count",
            "alias": "payment_count"
          },
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "total_amount"
          },
          {
            "field": "sale.amount",
            "function": "avg",
            "alias": "average_amount"
          }
        ]
      },
      "expected_payment_methods": ["credit_card", "paypal", "apple_pay", "debit_card"]
    },
    
    "inventory_analysis": {
      "description": "Find low inventory products with high sales",
      "query": {
        "filter": [
          {
            "field": "product.inventory",
            "operator": "less_than",
            "value": 50
          },
          {
            "field": "sale.date",
            "operator": "greater_than_or_equal",
            "value": "2023-11-01"
          }
        ],
        "fields": [
          "product.name",
          "product.category",
          "product.inventory",
          "product.price"
        ],
        "aggregates": [
          {
            "field": "sale.quantity",
            "function": "sum",
            "alias": "units_sold"
          },
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "revenue_generated"
          }
        ]
      },
      "expected_max_inventory": 50
    },
    
    "complex_multi_filter": {
      "description": "Complex query with multiple conditions",
      "query": {
        "filter": [
          {
            "field": "sale.amount",
            "operator": "between",
            "value": [100, 1000]
          },
          {
            "field": "product.category",
            "operator": "in",
            "value": ["Electronics", "Home & Garden"]
          },
          {
            "field": "customer.age",
            "operator": "between",
            "value": [25, 55]
          },
          {
            "field": "sale.date",
            "operator": "greater_than_or_equal",
            "value": "2023-01-01"
          }
        ],
        "fields": [
          "customer.name",
          "customer.state",
          "product.name",
          "product.category",
          "sale.amount",
          "sale.date"
        ],
        "limit": 100
      },
      "expected_amount_range": [100, 1000],
      "expected_age_range": [25, 55]
    }
  },
  
  "error_test_cases": {
    "invalid_field": {
      "description": "Query with non-existent field",
      "query": {
        "filter": [
          {
            "field": "invalid.field",
            "operator": "equals",
            "value": "test"
          }
        ],
        "fields": ["sale.id"]
      },
      "expected_error": "INVALID_FIELD_NAME"
    },
    
    "invalid_operator": {
      "description": "Query with invalid operator",
      "query": {
        "filter": [
          {
            "field": "sale.amount",
            "operator": "invalid_op",
            "value": 100
          }
        ],
        "fields": ["sale.id"]
      },
      "expected_error": "INVALID_OPERATOR"
    },
    
    "missing_required_field": {
      "description": "Query missing required fields array",
      "query": {
        "filter": [
          {
            "field": "sale.amount",
            "operator": "greater_than",
            "value": 100
          }
        ]
      },
      "expected_error": "MISSING_REQUIRED_FIELD"
    },
    
    "exceeds_limit": {
      "description": "Query requesting too many records",
      "query": {
        "filter": [],
        "fields": ["sale.id"],
        "limit": 15000
      },
      "expected_error": "LIMIT_EXCEEDED"
    }
  },
  
  "performance_test_cases": {
    "large_result_set": {
      "description": "Query that returns large number of records",
      "query": {
        "filter": [
          {
            "field": "sale.date",
            "operator": "greater_than_or_equal",
            "value": "2023-01-01"
          }
        ],
        "fields": ["sale.id", "sale.amount", "sale.date"],
        "limit": 5000
      },
      "expected_execution_time": "< 10 seconds"
    },
    
    "complex_aggregation": {
      "description": "Complex aggregation query",
      "query": {
        "filter": [
          {
            "field": "sale.date",
            "operator": "between",
            "value": ["2023-01-01", "2023-12-31"]
          }
        ],
        "fields": ["product.category", "customer.state", "date.quarter"],
        "aggregates": [
          {
            "field": "sale.amount",
            "function": "sum",
            "alias": "total_revenue"
          },
          {
            "field": "sale.amount",
            "function": "avg",
            "alias": "avg_revenue"
          },
          {
            "field": "sale.id",
            "function": "count",
            "alias": "total_sales"
          }
        ]
      },
      "expected_execution_time": "< 5 seconds"
    }
  }
}
