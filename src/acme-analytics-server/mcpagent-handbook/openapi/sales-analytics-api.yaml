openapi: 3.0.3
info:
  title: ACME Sales Analytics API
  description: |
    A comprehensive data analytics API for exploring e-commerce sales data. 
    This API provides powerful querying capabilities to analyze sales performance,
    customer behavior, product trends, and regional insights.
    
    ## Key Features
    - **Flexible Filtering**: Filter data using field operators (equals, greater than, contains, etc.)
    - **Field Selection**: Choose exactly which fields to include in results
    - **Aggregations**: Calculate sums, averages, counts, min/max values
    - **Real-time Data**: Access to live sales data with historical context
    
    ## Dataset Overview
    The dataset contains sales transactions with the following key entities:
    - **Products**: Electronics, clothing, books, home goods
    - **Customers**: Demographics, location, purchase history
    - **Sales**: Transaction details, pricing, quantities
    - **Regions**: Geographic distribution of sales
    - **Time**: Temporal analysis capabilities
  version: 1.0.0
  contact:
    name: ACME Analytics Team
    email: analytics@acme.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.acme.com/v1
    description: Production server
  - url: https://staging-api.acme.com/v1
    description: Staging server

paths:
  /query:
    post:
      summary: Query Sales Data
      description: |
        Execute complex queries against the sales analytics dataset. This endpoint
        allows you to filter, select fields, and perform aggregations on sales data.
        
        ## Query Structure
        - **filter**: Array of filter conditions to narrow down results
        - **fields**: Array of field names to include in the response
        - **aggregates**: Optional aggregations to perform on the data
        
        ## Example Use Cases
        - Find all electronics sales in Q4 2023
        - Calculate total revenue by region for last month
        - Get top 10 customers by purchase amount
        - Analyze product performance by category
      operationId: querySalesData
      tags:
        - Analytics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
            examples:
              basic_filter:
                summary: Basic filtering example
                description: Find all sales in California for electronics
                value:
                  filter:
                    - field: "customer.state"
                      operator: "equals"
                      value: "CA"
                    - field: "product.category"
                      operator: "equals"
                      value: "Electronics"
                  fields:
                    - "sale.id"
                    - "sale.amount"
                    - "product.name"
                    - "customer.name"
                    - "sale.date"
              aggregation_example:
                summary: Aggregation example
                description: Calculate total sales by product category
                value:
                  filter:
                    - field: "sale.date"
                      operator: "greater_than_or_equal"
                      value: "2023-01-01"
                  fields:
                    - "product.category"
                  aggregates:
                    - field: "sale.amount"
                      function: "sum"
                      alias: "total_revenue"
                    - field: "sale.id"
                      function: "count"
                      alias: "total_sales"
              complex_query:
                summary: Complex query example
                description: Find high-value customers in premium categories
                value:
                  filter:
                    - field: "sale.amount"
                      operator: "greater_than"
                      value: 500
                    - field: "product.category"
                      operator: "in"
                      value: ["Electronics", "Home & Garden"]
                    - field: "customer.age"
                      operator: "between"
                      value: [25, 45]
                  fields:
                    - "customer.id"
                    - "customer.name"
                    - "customer.email"
                    - "product.category"
                    - "sale.amount"
                    - "sale.date"
                  aggregates:
                    - field: "sale.amount"
                      function: "sum"
                      alias: "customer_total_spent"
      responses:
        '200':
          description: Query executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
              examples:
                success_response:
                  summary: Successful query response
                  value:
                    success: true
                    data:
                      - sale:
                          id: "SAL-001"
                          amount: 299.99
                          date: "2023-12-15"
                        product:
                          name: "Wireless Headphones"
                          category: "Electronics"
                        customer:
                          name: "John Smith"
                          state: "CA"
                    metadata:
                      total_records: 1
                      execution_time_ms: 45
                      query_id: "qry_abc123"
        '400':
          description: Invalid query request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /fields:
    get:
      summary: Get Available Fields
      description: |
        Retrieve a list of all available fields in the sales dataset.
        This endpoint helps you understand what data is available for querying.
      operationId: getAvailableFields
      tags:
        - Metadata
      responses:
        '200':
          description: List of available fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldsResponse'

  /health:
    get:
      summary: Health Check
      description: Check the health status of the API
      operationId: healthCheck
      tags:
        - System
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"

components:
  schemas:
    QueryRequest:
      type: object
      required:
        - filter
        - fields
      properties:
        filter:
          type: array
          description: Array of filter conditions to apply to the data
          items:
            $ref: '#/components/schemas/FilterCondition'
          minItems: 0
          maxItems: 20
        fields:
          type: array
          description: Array of field names to include in the response
          items:
            type: string
          minItems: 1
          maxItems: 50
        aggregates:
          type: array
          description: Optional array of aggregation functions to apply
          items:
            $ref: '#/components/schemas/AggregateFunction'
          maxItems: 10
        limit:
          type: integer
          description: Maximum number of records to return
          minimum: 1
          maximum: 10000
          default: 1000
        offset:
          type: integer
          description: Number of records to skip for pagination
          minimum: 0
          default: 0

    FilterCondition:
      type: object
      required:
        - field
        - operator
      properties:
        field:
          type: string
          description: Name of the field to filter on
          enum:
            # Sale fields
            - "sale.id"
            - "sale.amount"
            - "sale.date"
            - "sale.quantity"
            - "sale.discount"
            - "sale.tax"
            - "sale.shipping_cost"
            - "sale.payment_method"
            - "sale.status"
            # Product fields
            - "product.id"
            - "product.name"
            - "product.category"
            - "product.subcategory"
            - "product.brand"
            - "product.price"
            - "product.cost"
            - "product.inventory"
            - "product.rating"
            - "product.weight"
            - "product.dimensions"
            # Customer fields
            - "customer.id"
            - "customer.name"
            - "customer.email"
            - "customer.phone"
            - "customer.age"
            - "customer.gender"
            - "customer.city"
            - "customer.state"
            - "customer.country"
            - "customer.zip_code"
            - "customer.registration_date"
            - "customer.loyalty_tier"
            - "customer.total_spent"
            - "customer.total_orders"
            # Regional fields
            - "region.name"
            - "region.country"
            - "region.timezone"
            - "region.population"
            # Time fields
            - "date.year"
            - "date.month"
            - "date.quarter"
            - "date.week"
            - "date.day_of_week"
        operator:
          type: string
          description: Comparison operator to use
          enum:
            - "equals"
            - "not_equals"
            - "greater_than"
            - "greater_than_or_equal"
            - "less_than"
            - "less_than_or_equal"
            - "contains"
            - "not_contains"
            - "starts_with"
            - "ends_with"
            - "in"
            - "not_in"
            - "between"
            - "is_null"
            - "is_not_null"
        value:
          description: |
            Value(s) to compare against. Optional for `is_null` and `is_not_null`.
            For `between`, provide an array with exactly two values.
          nullable: true
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: array
              minItems: 1
              items:
                oneOf:
                  - type: string
                  - type: number
                  - type: boolean

    AggregateFunction:
      type: object
      required:
        - field
        - function
        - alias
      properties:
        field:
          type: string
          description: Field to perform aggregation on
        function:
          type: string
          description: Aggregation function to apply
          enum:
            - "sum"
            - "avg"
            - "count"
            - "min"
            - "max"
            - "median"
            - "stddev"
            - "variance"
        alias:
          type: string
          description: Name for the aggregated result column

    QueryResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the query was successful
        data:
          type: array
          description: Array of query results
          items:
            type: object
            description: Flexible object structure based on requested fields
            additionalProperties: true
        metadata:
          type: object
          properties:
            total_records:
              type: integer
              description: Total number of records matching the query
            execution_time_ms:
              type: integer
              description: Query execution time in milliseconds
            query_id:
              type: string
              description: Unique identifier for this query execution
            has_more:
              type: boolean
              description: Whether there are more results available
        aggregates:
          type: object
          description: Aggregated results if any aggregates were requested
          additionalProperties:
            oneOf:
              - type: number
              - type: string

    FieldsResponse:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldDefinition'
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              fields:
                type: array
                items:
                  type: string

    FieldDefinition:
      type: object
      properties:
        name:
          type: string
          description: Full field name (e.g., "customer.name")
        type:
          type: string
          description: Data type of the field
          enum:
            - "string"
            - "number"
            - "boolean"
            - "date"
            - "datetime"
        description:
          type: string
          description: Human-readable description of the field
        category:
          type: string
          description: Category this field belongs to
        nullable:
          type: boolean
          description: Whether this field can contain null values
        example:
          oneOf:
            - type: string
            - type: number
            - type: boolean
          description: Example value for this field

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: When the error occurred

  examples:
    SampleData:
      description: Example of the type of data available in the dataset
      value:
        sales:
          - id: "SAL-001"
            amount: 299.99
            date: "2023-12-15T10:30:00Z"
            quantity: 1
            discount: 0.00
            tax: 24.00
            shipping_cost: 9.99
            payment_method: "credit_card"
            status: "completed"
          - id: "SAL-002"
            amount: 89.50
            date: "2023-12-14T15:45:00Z"
            quantity: 2
            discount: 5.00
            tax: 6.76
            shipping_cost: 0.00
            payment_method: "paypal"
            status: "completed"
        products:
          - id: "PROD-001"
            name: "Wireless Bluetooth Headphones"
            category: "Electronics"
            subcategory: "Audio"
            brand: "TechSound"
            price: 299.99
            cost: 150.00
            inventory: 45
            rating: 4.5
            weight: 0.3
            dimensions: "20x15x8"
          - id: "PROD-002"
            name: "Organic Cotton T-Shirt"
            category: "Clothing"
            subcategory: "Tops"
            brand: "EcoWear"
            price: 29.99
            cost: 12.00
            inventory: 200
            rating: 4.2
            weight: 0.2
            dimensions: "30x25x2"
        customers:
          - id: "CUST-001"
            name: "John Smith"
            email: "john.smith@email.com"
            phone: "+1-555-0123"
            age: 34
            gender: "M"
            city: "San Francisco"
            state: "CA"
            country: "USA"
            zip_code: "94102"
            registration_date: "2022-03-15"
            loyalty_tier: "Gold"
            total_spent: 1250.75
            total_orders: 8
          - id: "CUST-002"
            name: "Sarah Johnson"
            email: "sarah.j@email.com"
            phone: "+1-555-0456"
            age: 28
            gender: "F"
            city: "Austin"
            state: "TX"
            country: "USA"
            zip_code: "78701"
            registration_date: "2023-01-20"
            loyalty_tier: "Silver"
            total_spent: 450.25
            total_orders: 3

tags:
  - name: Analytics
    description: Data querying and analytics operations
  - name: Metadata
    description: Information about available data and fields
  - name: System
    description: System health and status endpoints
