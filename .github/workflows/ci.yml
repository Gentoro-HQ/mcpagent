name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  IMAGE_NAME_BASE: admingentoro/gentoro
  IMAGE_NAME_PRODUCT: admingentoro/gentoro

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install xmllint
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Extract version from POM
      id: version
      run: |
        POM_FILE="src/mcpagent/pom.xml"
        CURRENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" "$POM_FILE")
        VERSION_NUMBER=${CURRENT_VERSION%-SNAPSHOT}
        echo "version=$VERSION_NUMBER" >> $GITHUB_OUTPUT
        echo "full_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION (testing: $VERSION_NUMBER)"
    
    - name: Build base image
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        echo "Building base image for ${{ matrix.platform }}..."
        ./scripts/docker/build-base.sh "$VERSION" "" --platform "${{ matrix.platform }}"
    
    - name: Build product JAR and run tests
      run: |
        cd src/mcpagent
        
        # Create foundation directory for tests
        sudo mkdir -p /var/foundation
        sudo chmod 777 /var/foundation
        
        # Build and test
        echo "Building JAR (skipping unit tests)..."
        mvn -q -DskipTests package
        echo "Skipping unit tests for now..."
        # mvn -q test
    
    - name: Build product image
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        POM_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" src/mcpagent/pom.xml)
        JAR_NAME="mcpagent-$POM_VERSION.jar"
        echo "Building product image for ${{ matrix.platform }}..."
        
        # Ensure base image is available locally for this platform
        echo "Checking if base image exists locally..."
        if ! docker image inspect "admingentoro/gentoro:base-$VERSION" >/dev/null 2>&1; then
          echo "Base image not found locally, building it for ${{ matrix.platform }}..."
          ./scripts/docker/build-base.sh "$VERSION" "" --platform "${{ matrix.platform }}"
        else
          echo "Base image found locally"
        fi
        
        ./scripts/docker/build-product.sh "$VERSION" "$JAR_NAME" "" --platform "${{ matrix.platform }}"
    
    - name: Validate services
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        PLATFORM="${{ matrix.platform }}"
        echo "Validating services on $PLATFORM..."
        
        # Use the validation script
        chmod +x scripts/docker/validate-services.sh
        ./scripts/docker/validate-services.sh "$VERSION" "$PLATFORM"
    

