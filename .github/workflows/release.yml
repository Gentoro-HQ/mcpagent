name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      dry_run:
        description: 'Dry run (no actual release)'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME_BASE: admingentoro/gentoro
  IMAGE_NAME_PRODUCT: admingentoro/gentoro

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper tagging
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Log in to Docker Hub
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.dry_run != 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
    - name: Extract version from tag
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      id: extract_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "Released version: $VERSION"
    
    - name: Calculate version for manual release
      if: github.event_name == 'workflow_dispatch'
      id: calculate_version
      run: |
        POM_FILE="src/mcpagent/pom.xml"
        CURRENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" "$POM_FILE")
        echo "Current version: $CURRENT_VERSION"
        
        # Parse version
        IFS='.-' read -r MAJ MIN PAT SNAP <<<"$CURRENT_VERSION"
        
        # Calculate new version based on input
        BUMP="${{ github.event.inputs.version_type }}"
        if [[ "$BUMP" == "major" ]]; then
          MAJ=$((MAJ+1)); MIN=0; PAT=0
        elif [[ "$BUMP" == "minor" ]]; then
          MIN=$((MIN+1)); PAT=0
        else
          PAT=$((PAT+1))
        fi
        
        NEW_VERSION="${MAJ}.${MIN}.${PAT}-SNAPSHOT"
        TAG="v${MAJ}.${MIN}.${PAT}"
        
        echo "version=$TAG" >> $GITHUB_OUTPUT
        echo "version_number=${MAJ}.${MIN}.${PAT}" >> $GITHUB_OUTPUT
        echo "new_snapshot=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Calculated version: $TAG (next snapshot: $NEW_VERSION)"
    
    - name: Update version for manual release
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true'
      run: |
        NEW_SNAPSHOT="${{ steps.calculate_version.outputs.new_snapshot }}"
        mvn -q -f src/mcpagent/pom.xml versions:set -DnewVersion="$NEW_SNAPSHOT" -DgenerateBackupPoms=false
        
        # Commit version bump
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add src/mcpagent/pom.xml
        git commit -m "chore(release): bump version to $NEW_SNAPSHOT"
    
    - name: Create tag for manual release
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true'
      run: |
        TAG="${{ steps.calculate_version.outputs.version }}"
        git tag -a "$TAG" -m "Release $TAG"
    
    - name: Build base image
      if: github.event.inputs.dry_run != 'true'
      run: |
        VERSION="${{ steps.extract_version.outputs.version || steps.calculate_version.outputs.version }}"
        ./scripts/docker/build-base.sh "$VERSION"
    
    # - name: Build product image
    #   if: github.event.inputs.dry_run != 'true'
    #   run: |
    #     VERSION="${{ steps.extract_version.outputs.version || steps.calculate_version.outputs.version }}"
    #     ./scripts/docker/build-product.sh "$VERSION"
    
    - name: Push base image to registry
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.dry_run != 'true'
      run: |
        VERSION="${{ steps.extract_version.outputs.version || steps.calculate_version.outputs.version }}"
        # Only publish base image for now (product image has compilation issues)
        docker push admingentoro/gentoro:base-$VERSION
        docker push admingentoro/gentoro:base-latest
    
    - name: Push changes for manual release
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true'
      run: |
        git push origin main
        git push origin --tags
    
    - name: Create GitHub Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.version }}
        release_name: Release ${{ steps.extract_version.outputs.version }}
        body: |
          ## Changes in this Release
          
          This release includes:
          - Updated base image: `${{ env.IMAGE_NAME_BASE }}:base-${{ steps.extract_version.outputs.version }}`
          
          **Note**: Product image build is temporarily disabled due to compilation issues.
          
          ## Docker Images
          
          ```bash
          # Base image
          docker pull ${{ env.IMAGE_NAME_BASE }}:base-${{ steps.extract_version.outputs.version }}
          docker pull ${{ env.IMAGE_NAME_BASE }}:base-latest
          ```
        draft: false
        prerelease: false
    
    - name: Dry run summary
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true'
      run: |
        echo "## Dry Run Summary"
        echo "Version: ${{ steps.calculate_version.outputs.version }}"
        echo "Next snapshot: ${{ steps.calculate_version.outputs.new_snapshot }}"
        echo ""
        echo "This would have:"
        echo "- Updated POM version to ${{ steps.calculate_version.outputs.new_snapshot }}"
        echo "- Created tag ${{ steps.calculate_version.outputs.version }}"
        echo "- Built and pushed Docker images"
        echo "- Created GitHub release"
